# Test Set 2: Computed Values.
#

###############################################################################
# TC 2.1 Test Basic CD Operations
###############################################################################
# Generate basic variables in the AMP.
#
###############################################################################


#------------------------------------------------------------------------------
# Step 2.1.1: Define UINT C1 as "4"
#------------------------------------------------------------------------------
# Note: C1 MID will be 0x110103010203
# NOTE: C1 EXPR TYPE is UINT (11)
# NOTE: C1 EXPR is literal uvast 4 (c70501020201100104)
# Note: C1 Type will be UINT (11)
#------------------------------------------------------------------------------
c30401010403141610061101030102030b0b01c70501020201100104010b

#------------------------------------------------------------------------------
# Step 2.1.2: List CDs on the agent and confirm
# that MID 0x110103010203 is present in the report.
#------------------------------------------------------------------------------
83040103

#------------------------------------------------------------------------------
# Step 2.1.3: Restart the Agent. 
# (OPTIONAL)
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Step 2.1.4: Re-list CDs known to the agent to 
# confirm that MID 0403010203 is still known.  
# (OPTIONAL based on Step 2.1.3)
#------------------------------------------------------------------------------
83040103

#------------------------------------------------------------------------------
# Step 2.1.5: Ask agent to describe C1 to ensure
# the description survived reset. Verify in report
# that value is 4.
#------------------------------------------------------------------------------
# Note: C1 MID will be 0403010203
#------------------------------------------------------------------------------
c30401040201150701110103010203

#------------------------------------------------------------------------------
# Step 2.1.6 Delete C1
#------------------------------------------------------------------------------
# Note: C1 MID will be 0x110103010203
#------------------------------------------------------------------------------
c30401020201150701110103010203

#------------------------------------------------------------------------------
# Step 2.1.7: Ask agent to list known CDs and
# ensure that C1 is no longer listed.
#------------------------------------------------------------------------------
83040103

#------------------------------------------------------------------------------
# Step 2.1.8: Reset the Agent.
# OPTIONAL
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Step 2.1.9: Ask agent to list known CDs and 
# ensure that C1 is no longer listed.
# OPTIONAL based on Step 2.1.8
#------------------------------------------------------------------------------
83040103


###############################################################################
# Test Case 2.2: Using expressions in CDs.
###############################################################################
# Pre-conditions: C1 has been deleted from the agent/mgr.
# We will re-create the following sequence:
# uint c1 = 4; // Test that c1 = 4.
# expr c2 = c1 + 1; // Test that c2 = 5.
# uint c3 = eval(c2); // Test that c3 = 5.
# c1 = c3; // Test that c1 = 5.
# c3 = eval(c2); // Test that c3 = 6.
#
###############################################################################

#------------------------------------------------------------------------------
# Step 2.2.1: Define UINT C1 as "4"
#------------------------------------------------------------------------------
# Note: C1 MID will be 0x110103010203
# Note: C1 Type will be UINT (11)
#------------------------------------------------------------------------------
c30401010403141610061101030102030b0b01c70501020201100104010b

#------------------------------------------------------------------------------
# Step 2.2.2: Define EXPR C2 as "C1 + 1"
#------------------------------------------------------------------------------
# C2 MID will be 0x1101030040506
# C2 Init EXPR type is UINT (11)
# C2 Init EXPR is C1 1 + 
# C2 TYPE will be 22 (EXPR)
#------------------------------------------------------------------------------
c3040101040314161006110103040506150b03110103010203c70501020201100101880701000116

#------------------------------------------------------------------------------
# Step 2.2.3: Describe C2 and ensure it is of type
#------------------------------------------------------------------------------
# Expression with the MC from 2.2.2 above. 
# Note: C2 MID is 0x1101030040506
#------------------------------------------------------------------------------
c30401040201150701110103040506

#------------------------------------------------------------------------------
# Step 2.2.4: Define UINT C3 as "C2"
#------------------------------------------------------------------------------
# Note: C3 MID is 110103070809
# Note: C3 INit EXPR Type is UINT (11)
# Note: C3 Init EXPR is "C2"
# Note; C3 type is UINT (11)
#------------------------------------------------------------------------------
c3040101040314161006110103070809080b01110103040506010b

#------------------------------------------------------------------------------
# Step 2.2.5: Define custom report R1 = {C1, C2, C3}
#------------------------------------------------------------------------------
# Note: R1 MID is 1201020102
#------------------------------------------------------------------------------
c3040105030214150512010201021303110103010203110103040506110103070809

#------------------------------------------------------------------------------
# Step 2.2.6: Generate Report R1.
#------------------------------------------------------------------------------
# Note: R1 MID is 1201020102
# Verify values are: {4, 5, 5}
#------------------------------------------------------------------------------
c30401090302151706011201020102020100

#------------------------------------------------------------------------------
# Step 2.2.7: STORE(c1, c3)
#------------------------------------------------------------------------------
# Note C1 MID is 0x110103010203
# Note: Expression holding C3 is type UINT (11)
# Note C3 MID is 0x110103070809
#------------------------------------------------------------------------------
c30401160302141606110103010203080b01110103070809

#------------------------------------------------------------------------------
# Step 2.2.8: STORE(c3, c2)
#------------------------------------------------------------------------------
# Note C3 MID is 0x110103070809
# EXPR for C2 is of type UINT (11)
# Note C2 MID is 0x1101030040506 
#------------------------------------------------------------------------------
c30401160302141606110103070809080b01110103040506

#------------------------------------------------------------------------------
# Step 2.2.9: Generate Report R1
#------------------------------------------------------------------------------
# Note: R1 MID is 1201020102
# Verify values are: {5, 6, 6}
#------------------------------------------------------------------------------
c30401090302151706011201020102020100


